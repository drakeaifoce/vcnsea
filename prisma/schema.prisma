generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Student {
  id          Int          @id @default(autoincrement())
  firstName   String
  secondName  String
  email       String
  password    String
  cv          CV?
  StudentInfo StudentInfo?
  Responses   Response[]
}

model CV {
  id             Int             @id @default(autoincrement())
  cv_file_path   String
  skills         String
  student        Student         @relation(fields: [studentId], references: [id])
  studentId      Int             @unique
  jobExperiences JobExperience[]
}

model StudentInfo {
  id          Int     @id @default(autoincrement())
  bio         String
  age         String
  quote       String
  location    String
  goals       String
  frustration String
  avatar      String?
  introvert   Int
  busy        Int
  analytical  Int
  messy       Int
  independent Int
  Student     Student @relation(fields: [studentId], references: [id])
  studentId   Int     @unique
}

model JobExperience {
  id           Int      @id @default(autoincrement())
  company_name String
  position     String
  start_date   DateTime
  end_date     DateTime
  cv           CV       @relation(fields: [cvId], references: [id])
  cvId         Int
}

model Company {
  id           Int       @id @default(autoincrement())
  firstName    String
  secondName   String
  email        String
  position     String
  company_name String
  BIN          String
  city         String
  description  String
  avatar       String?
  password     String
  vacancies    Vacancy[]
}

model Vacancy {
  id          Int        @id @default(autoincrement())
  salary_min  String
  salary_max  String
  skills      String
  title       String
  description String
  company     Company    @relation(fields: [companyId], references: [id])
  companyId   Int
  responses   Response[]
}

model Response {
  id        Int      @id @default(autoincrement())
  status    String
  Student   Student? @relation(fields: [StudentId], references: [id])
  StudentId Int?
  vacancy   Vacancy? @relation(fields: [vacancyId], references: [id])
  vacancyId Int?
}
